/*
ID: scottn1
PROG: pprime
LANG: C++
*/
#include <bits/stdc++.h>
using namespace std;
#define T
int ans[10000];

bool isprime(int n)
{
    int t = sqrt(n);
    for(int i = 2; i <= t; i++)
        if(n%i == 0)
            return false;
    return true;
}





int main()
{
    #ifdef T
        freopen("pprime.in", "r", stdin);
        freopen("pprime.out", "w", stdout);
    #endif
    int i = 0;

    //偶数位的回文数不肯能是质数，因为会被11整除
    for(int d1 = 2; d1 < 9; d1++)
        ans[i++] = d1;

    ans[i++] = 11;


    for(int d1 = 1; d1 <= 9; d1++)
    {
        for(int d2 = 0; d2 <= 9; d2++)
        {

            ans[i++] = d1*101+d2*10;
        }
    }

    for(int d1 = 1; d1 <= 9; d1++)
    {
        for(int d2 = 0; d2 <= 9; d2++)
        {
            for(int d3 = 0; d3 <= 9; d3++)
            {
                ans[i++] = d1*10001+d2*1010+d3*100;
            }
        }
    }

    for(int d1 = 1; d1 <= 9; d1++)
    {
        for(int d2 = 0; d2 <= 9; d2++)
        {
            for(int d3 = 0; d3 <= 9; d3++)
            {
                for(int d4 = 0; d4 <= 9; d4++)
                {
                    ans[i++] = d1*1000001+d2*100010+d3*10100+d4*1000;
                }
            }
        }
    }


    int a, b;
    cin >> a >> b;

    for(int j = 0; j < i && ans[j] <= b; j++)
    {
        //cout << ans[j] << " " << (ans[j]>=a) << " " << isprime(ans[j]) << endl;
        if(ans[j] >= a && isprime(ans[j]))
            printf("%d\n", ans[j]);
    }




    return 0;
}
