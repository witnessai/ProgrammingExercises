//参考：http://blog.csdn.net/kk303/article/details/7019190
//动态规划题目

/*
ID: scottn1
PROG: prefix
LANG: C++
*/
#include <bits/stdc++.h>
using namespace std;
#define T

bool g[200005];
string s, a[205];
char str[81];


int main()
{
    #ifdef T
        freopen("prefix.in", "r", stdin);
        freopen("prefix.out", "w", stdout);
    #endif
    int i = 0;
    while(cin >> a[i])
    {
        if(a[i][0] == '.') break;
        i++;
    }
    int num = i;

    s = "";
    while(~scanf("%s", str))
    {
        s += str;
    }
    int len = s.size();
    int maxn = 0;
    g[0] = true;
    for(i = 0; i < len; i++)
    {
        if(g[i])
        {
            for(int j = 0; j < num; j++)
            {
                for(int k = 0; k < a[j].size(); k++)
                    if(s[i+k] != a[j][k]) goto A;

                g[i+a[j].size()] = true;
                if(i+a[j].size()>maxn) maxn = i+a[j].size();
                A: ;
            }
        }

    }

    cout << maxn << endl;
    return 0;
}


//nocow题解：
// dfs
// 题解上写dfs,我怎么感觉是像BFS
#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <stack>
 
using namespace std;
 
int main() {
    int best = -1, n = -1, v[200001] = { 0 }, sz[202];
    char pre[202][11], s[200002], t[80];
    freopen("prefix.in", "r", stdin), freopen("prefix.out", "w", stdout);
 
    do {
        scanf("%s", pre[++n]);
        sz[n] = strlen(pre[n]);
    } while (pre[n][0] != '.');
    while (scanf("%s", t) != -1)
        strncat(s, t, sizeof (t));
 
    stack<int> stk; stk.push(0); v[0] = 1;
 
    while (stk.size()) {
        int from = stk.top(); stk.pop();
        best = max(best, from);
        for (int i = 0; i < n; i++) 
            if (!strncmp(s + from, pre[i], sz[i]) && !(v[from + sz[i]]++))
                stk.push(from + sz[i]);
    }
    printf("%d\n", best);
    return 0;
}

