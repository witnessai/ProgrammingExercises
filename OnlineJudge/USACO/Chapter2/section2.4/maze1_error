/*
ID: scottn1
LANG: C++
TASK: maze1
*/

#include <bits/stdc++.h>
using namespace std;
#define T

int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};
int vis[205][101];
int ans;
int tans;
int overlay;
int W, H;
string g[205];
bool over[411][211];
void dfs(int x, int y, int p)
{
    //cout << "("<<x<<","<<y<<")" << "->";
    if(x<=0||x>=2*H||y<=0||y>=2*W)
    {
        if(g[x][y]!='|'&&g[x][y]!='-')
        {
            if(!over[x][y])
            {overlay++; tans=p; over[x][y]=true;}
            if(overlay==2){overlay=0; ans=max(ans, min(tans, p)); tans=0;}
        }
        return;
    }
    vis[x][y] = 1;
    cout << "("<<x<<","<<y<<") "<<p << " ans is " << ans << " tans is "<< tans<<endl;
    //cout << p << endl;
    for(int i = 0; i < 4; i++)
    {
        int xx = x+dx[i];
        int yy = y+dy[i];
        if(!vis[xx][yy])
        {
            vis[xx][yy] = 1;
            if(xx<=0||xx>=2*H||yy<=0||yy>=2*W)
            {
                if(g[xx][yy]!='|'&&g[xx][yy]!='-')
                {
                    if(!over[xx][yy])
                    {overlay++; tans=p+1; over[xx][yy]=true;}
                    if(overlay==2){overlay=0; ans=max(ans, min(tans, p+1)); tans=0;return;}
                }
                continue;
            }
            if(g[xx][yy]!='|'&&g[xx][yy]!='-')
            dfs(xx*2-x, yy*2-y, p+1);
        }

    }
}

int main()
{

    #ifdef T
	freopen("maze1.in", "r", stdin);
	freopen("maze1.out", "w", stdout);
	#endif
	cin >> W >> H;
	string _t;
	getline(cin, _t);
	for(int i = 0; i <= 2*H; i++)
    {
            getline(cin, g[i]);
    }


    for(int i = 1; i <= H; i++)
    {
        for(int j = 1; j <= W; j++)
        {
            overlay = 0; tans=0;
            memset(over, 0, sizeof(over));
            memset(vis, 0, sizeof(vis));
            dfs(i*2-1, j*2-1, 0);
        }
    }
    cout << ans << endl;
    return 0;

}
