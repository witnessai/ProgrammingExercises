#include <iostream>
#include <cstdio>

using namespace std;

//const double eps = 1e-5;
typedef struct {
    int weight;
    int lchild, rchild, parent;
}hufmtree;
hufmtree tree[120];

int n;
int sum;

void Huffman(hufmtree tree[])
{
    int p1, p2;
    sum = 0;

    int small1, small2;
    for(int i = 0; i < 2*n-1; i++ )
    {
        tree[i].parent = -1;
        tree[i].lchild = -1;
        tree[i].rchild = -1;
        tree[i].weight = 0;
    }

    for(int i = 0; i < n; i++)
    {
        int x;
        cin >> x;
        tree[i].weight = x;
    }
    for(int i = n; i < 2*n-1; i++)
    {
        p1 = p2 = 0;
        small1 = small2 = 10000;
        for(int j = 0; j < i; j++)
        {
            if(tree[j].parent == -1)
            {
                if(tree[j].weight - small1 < 0)
                {
                    small2 = small1;
                    small1 = tree[j].weight;
                    p2 = p1;
                    p1 = j;
                }
                else if(tree[j].weight - small2 < 0)
                {
                    small2 = tree[j].weight;
                    p2 = j;
                }
            }
        }
        tree[p1].parent = i;
        tree[p2].parent = i;
        tree[i].lchild = p1;
        tree[i].rchild = p2;
        tree[i].parent = -1;
        tree[i].weight = tree[p1].weight+tree[p2].weight;
        sum += tree[i].weight;
        //cout << tree[i].weight << endl;
    }
    //cout << tree[2*n-2].weight << endl;
    cout << sum << endl;
}

int main()
{
    freopen("in.txt", "r", stdin);
    while(cin >> n)
    {
        Huffman(tree);
    }



    return 0;
}
