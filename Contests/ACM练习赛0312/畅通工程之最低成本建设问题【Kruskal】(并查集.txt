#include<iostream>  
#include<cstdio>  
#include<math.h>  
#include<cstring>  
#include<climits>  
#include<string>  
#include<queue>  
#include<iostream>  
#include<cstdio>  
#include<cmath>  
#include<cstring>  
#include<climits>  
#include<string>  
#include<queue>  
#include<stack>  
#include<set>  
#include<map>  
#include<list>  
#include<algorithm>  
using namespace std;  
#define rep(i,j,k)for(i=j;i<k;i++)  
#define per(i,j,k)for(i=j;i>k;i--)  
#define MS(x,y)memset(x,y,sizeof(x))  
#define lson l,m,rt<<1  
#define rson m+1,r,rt<<1|1  
#define ll long long  
#define abs(x) (x>0?x:-x)  
const int INF=0x7ffffff;  
const ll MAX=1e18;  
  
const int M=1e4+10;  
int i,j,k,n,m;  
struct node  
{  
    int u,v,w;  
}e[M];  
int r[M];  
int pre[M];  
  
bool cmp(node a,node b)  
{  
    return a.w<b.w;  
}  
  
int f(int x)  
{  
    int r=x;  
    while(r!=pre[r]){  
        r=pre[r];  
    }  
    return r;  
}  
  
int main()  
{  
    while(~scanf("%d%d",&n,&m)){  
        for(i=1;i<=n;i++)pre[i]=i;  
        for(i=0;i<m;i++)  
            scanf("%d%d%d",&e[i].u,&e[i].v,&e[i].w);  
        sort(e,e+m,cmp);  
        int ans=0;  
        for(i=0;i<m;i++){  
            int xx=f(e[i].u);  
            int yy=f(e[i].v);  
            if(xx!=yy){  
                pre[xx]=yy;  
                ans+=e[i].w;  
            }  
        }  
        int sum=0;  
        for(i=1;i<=n;i++){  
            if(f(i)==i)sum++;  
        }  
        if(sum==1)printf("%d\n",ans);  
        else printf("Impossible\n");  
    }  
    return 0;  
}  