String 函数列表

    函数名      描述
    begin      得到指向字符串开头的Iterator
    end      得到指向字符串结尾的Iterator
    rbegin      得到指向反向字符串开头的Iterator
    rend      得到指向反向字符串结尾的Iterator
    size      得到字符串的大小
    length      和size函数功能相同
    max_size      字符串可能的最大大小
    capacity      在不重新分配内存的情况下，字符串可能的大小
    empty      判断是否为空
    operator[]      取第几个元素，相当于数组
    c_str      取得C风格的const char* 字符串
    data      取得字符串内容地址
    operator=      赋值操作符
    reserve      预留空间
    swap      交换函数
    insert      插入字符
    append      追加字符
    push_back      追加字符
    operator+=      += 操作符
    erase      删除字符串
    clear      清空字符容器中所有内容
    resize      重新分配空间
    assign      和赋值操作符一样
    replace      替代
    copy      字符串到空间
    find      查找
    rfind      反向查找
    find_first_of      查找包含子串中的任何字符，返回第一个位置
    find_first_not_of      查找不包含子串中的任何字符，返回第一个位置
    find_last_of      查找包含子串中的任何字符，返回最后一个位置
    find_last_not_of      查找不包含子串中的任何字符，返回最后一个位置
    substr      得到字串
    compare      比较字符串
    operator+      字符串链接
    operator==      判断是否相等
    operator!=      判断是否不等于
    operator<      判断是否小于
    operator>>      从输入流中读入字符串
    operator<<      字符串写入


—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————


Vector 函数列表

    push_back   在数组的最后添加一个数据
    pop_back    去掉数组的最后一个数据 
    at                得到编号位置的数据
    begin           得到数组头的指针
    end             得到数组的最后一个单元+1的指针
    front        得到数组头的引用
    back            得到数组的最后一个单元的引用
    max_size     得到vector最大可以是多大
    capacity       当前vector分配的大小
    size           当前使用数据的大小
    resize         改变当前使用数据的大小，如果它比当前使用的大，者填充默认值
    reserve      改变当前vecotr所分配空间的大小
    erase         删除指针指向的数据项
    clear          清空当前的vector
    rbegin        将vector反转后的开始指针返回(其实就是原来的end-1)
    rend          将vector反转构的结束指针返回(其实就是原来的begin-1)
    empty        判断vector是否为空
    swap         与另一个vector交换数据
    clear()         移除容器中所有数据。
    empty()         判断容器是否为空。
    erase(pos)        删除pos位置的数据
    erase(beg,end) 删除[beg,end)区间的数据
    front()         传回第一个数据。
    insert(pos,elem)  在pos位置插入一个elem拷贝
    pop_back()     删除最后一个数据。
    push_back(elem) 在尾部加入一个数据。
    resize(num)     重新设置该容器的大小
    size()         回容器中实际数据的个数。
    begin()           返回指向容器第一个元素的迭代器
    end()             返回指向容器最后一个元素的迭代器
    assign(beg,end)：将[beg; end)区间中的数据赋值给c。
    assign(n,elem)：将n个elem的拷贝赋值给c。 
    at(idx)：传回索引idx所指的数据，如果idx越界，抛出out_of_range。 
    back()：传回最后一个数据，不检查这个数据是否存在。
    front()：传回地一个数据。 
    get_allocator：使用构造函数返回一个拷贝。 
    rbegin()：传回一个逆向队列的第一个数据。 
    rend()：传回一个逆向队列的最后一个数据的下一个位置。 
    ~ vector <Elem>()：销毁所有数据，释放内存
